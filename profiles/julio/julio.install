<?php
define('JULIO_DEFAULT_THEME', 'watt');
/**
 * Implements hook_intall().
 */
function julio_install() {
  variable_set('theme_default', JULIO_DEFAULT_THEME);

  // configure filter formats
  julio_filter_formats();

  // configure theme settings
  julio_config_theme();

  // configure some standard blocks
  julio_blocks();

  // configure media fields
  julio_media_field_config();

  // configure page content type (this assumes julio_media_config(); has
  // already ran
  julio_page_content_type();

  // configure navigational elements
  julio_nav_config();

  // Update the menu router information.
  menu_rebuild();

  // configure wysiwyg settings
  julio_wysiwyg();

  // configure user settings
  julio_user_config();
  julio_user_roles();

  //disable og_list view
  $status = variable_get('views_defaults', array());
  $status['og_list'] = TRUE;
  variable_set('views_defaults', $status);

  julio_blocks();
  julio_setup_dashboard_blocks();
  julio_cleanup();
}

/**
 * Set dashboard blocks into the proper regions
 */
function julio_setup_dashboard_blocks() {
  $defaults = array(
    'theme' => 'seven',
    'status' => 1,
    'custom' => 0,
    'visibility' => 0,
    'pages' => '',
    'title' => '',
    'cache' => -1,
  );
  $blocks = array(
    array(
      'module' => 'menu',
      'delta' => 'menu-julio-new-content',
      'weight' => -13,
      'region' => 'dashboard_sidebar',
    ),
    array (
      'module' => 'menu',
      'delta' => 'menu-julio-new-group',
      'weight' => -14,
      'region' => 'dashboard_sidebar',
    ),
    array (
      'module' => 'menu',
      'delta' => 'menu-julio-admin-quick-links',
      'weight' => -15,
      'region' => 'dashboard_sidebar',
    ),
    array (
      'module' => 'search',
      'delta' => 'form',
      'weight' => 0,
      'region' => 'dashboard_sidebar',
    ),
    array (
      'module' => 'views',
      'delta' => 'julio_admin_content_list-block',
      'weight' => -14,
      'region' => 'dashboard_main',
    ),
    array (
      'module' => 'views',
      'delta' => 'julio_admin_content_list-block_1',
      'weight' => -15,
      'region' => 'dashboard_main',
    ),
    array (
      'module' => 'views',
      'delta' => 'julio_admin_user_list-block',
      'weight' => 0,
      'region' => 'dashboard_main',
    ),
  );

  foreach($blocks as $block) {
    $block = array_merge($block, $defaults);
    db_merge('block')
      ->key(array(
        'theme' => $block['theme'],
        'delta' => $block['delta'],
        'module' => $block['module'],
      ))
      ->fields(array(
        'weight' => $block['weight'],
        'status' => 1,
        'region' => $block['region'],
        'pages' => '',
      ))
      ->execute();
  }
}

/**
 * Add additional user roles besides Anonymous and Authenticated
 *
 * This will likely remain as just and administrator role.
 */
function julio_user_roles() {
  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  // Create a default role for content creator
  $role = new stdClass();
  $role->name = 'content creator';
  $role->weight = 3;
  user_role_save($role);

  $permissions = array(
    'administer group',
    'create page content',
    'create url aliases',
    'delete any page content',
    'delete own page content',
    'edit any page content',
    'edit own page content',
  );
  user_role_grant_permissions($role->rid, $permissions);

  // save this role id in case something needs it later
  variable_set('julio_content_creator_role', $role->rid);

}

/**
 *
 */
function julio_cleanup() {
  $watt = array (
    'toggle_logo' => 1,
    'toggle_name' => 1,
    'toggle_slogan' => 1,
    'toggle_node_user_picture' => 0,
    'toggle_comment_user_picture' => 0,
    'toggle_comment_user_verification' => 0,
    'toggle_favicon' => 0,
    'toggle_main_menu' => 1,
    'toggle_secondary_menu' => 0,
    'example_plugin__NS__toggle_color_me' => 0,
    'example_plugin__NS__toggle_flip_me' => 0,
    'color_module__NS__toggle_color_module' => 1,
    'default_logo' => 1,
    'logo_path' => '',
    'logo_upload' => '',
    'default_favicon' => 1,
    'favicon_path' => '',
    'favicon_upload' => '',
    'scheme' => 'default',
    'palette' =>
    array (
      'base' => '#f5f5f5',
      'top' => '#eea928',
      'bottom' => '#2abcbc',
      'bg' => '#eeeeee',
      'page' => '#ffffff',
      'sidebar' => '#fffeff',
      'footer' => '#666666',
      'text' => '#333333',
      'link' => '#b31818',
      'slide' => '#f4f5f5',
    ),
    'theme' => 'watt',
    'info' =>
    array (
      'fields' =>
      array (
        'base' => 'Base',
        'top' => 'Top Navigation',
        'bottom' => 'Bottom Navigation',
        'bg' => 'Main background',
        'page' => 'Page background',
        'sidebar' => 'Sidebar background',
        'footer' => 'Footer background',
        'text' => 'Text color',
        'link' => 'Link color',
        'slide' => 'Slideshow header',
      ),
      'schemes' =>
      array (
        'default' =>
        array (
          'title' => 'Colorful (default)',
          'colors' =>
          array (
            'base' => '#f5f5f5',
            'top' => '#eea928',
            'bottom' => '#2abcbc',
            'bg' => '#eeeeee',
            'page' => '#ffffff',
            'sidebar' => '#fffeff',
            'footer' => '#666666',
            'text' => '#333333',
            'link' => '#b31818',
            'slide' => '#f4f5f5',
          ),
        ),
        'firehouse' =>
        array (
          'title' => 'Firehouse',
          'colors' =>
          array (
            'base' => '#f5f5f5',
            'top' => '#EEA928',
            'bottom' => '#2ABCBC',
            'bg' => '#ffffff',
            'page' => '#ffffff',
            'sidebar' => '#ffffff',
            'footer' => '#666666',
            'text' => '#333333',
            'link' => '#B31818',
            'slide' => '#f4f5f5',
          ),
        ),
        'ice' =>
        array (
          'title' => 'Ice',
          'colors' =>
          array (
            'base' => '#f5f5f5',
            'top' => '#EEA928',
            'bottom' => '#2ABCBC',
            'bg' => '#ffffff',
            'page' => '#ffffff',
            'sidebar' => '#ffffff',
            'footer' => '#292929',
            'text' => '#333333',
            'link' => '#B31818',
            'slide' => '#f4f5f5',
          ),
        ),
        '' =>
        array (
          'title' => 'Custom',
          'colors' =>
          array (
          ),
        ),
      ),
      'copy' =>
      array (
      ),
      'css' =>
      array (
        0 => 'styles/colors.css',
      ),
      'gradients' =>
      array (
        0 =>
        array (
          'dimension' =>
          array (
            0 => 0,
            1 => 0,
            2 => 0,
            3 => 0,
          ),
          'direction' => 'vertical',
          'colors' =>
          array (
            0 => 'top',
            1 => 'bottom',
          ),
        ),
      ),
      'fill' =>
      array (
      ),
      'slices' =>
      array (
      ),
      'blend_target' => '#000',
      'preview_css' => 'color/preview.css',
      'preview_js' => 'color/preview.js',
      'preview_html' => 'color/preview.html',
      'base_image' => 'color/base.png',
    ),
  );
  variable_set('theme_watt_settings', $watt);

  $css_options = array(
    'font_size' => 'profiles/julio/themes/watt/css_options/Font Size.option/Medium - 14px.css',
    'sidebar_position' => 'profiles/julio/themes/watt/css_options/Sidebar Position.option/Sidebar Left.css',
    'texture' => 'profiles/julio/themes/watt/css_options/Texture.option/Noise.css',
    'layout' => 'profiles/julio/themes/watt/css_options/Layout.option/Fluid (Responsive).css',
    'font_family' => 'profiles/julio/themes/watt/css_options/Font Family.option/Sans-Serif (Helvetica, Arial).css',
  );
  variable_set('css_options_watt', $css_options);
}

/**
 * Configure filter formats
 */
function julio_filter_formats() {
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
        'settings' => array(
          'allowed_html' => '<a> <em> <strong> <cite> <blockquote> <code> <ul> <ol> <li> <dl> <dt> <dd> <img> <h2> <h3> <h4> <h5> <h6> <address> <pre> <p> <br> <del> <u> <strike>',
        ),
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
      // Media tag filter
      'media_filter' => array(
        'weight' => 11,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);
}


/**
 * Configure a few basic blocks
 */
function julio_blocks($admin_theme = 'seven') {
  // Enable some standard blocks.
  $default_theme = variable_get('theme_default', JULIO_DEFAULT_THEME);

  // clean out any previous entries (in case a sub install profile calls this)
  db_delete('block')->condition('theme', $default_theme)->execute();
  db_delete('block')->condition('theme', $admin_theme)->execute();

  $values = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $default_theme,
      'status' => 0,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'navigation',
      'theme' => $default_theme,
      'status' => 0,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'powered-by',
      'theme' => $default_theme,
      'status' => 0,
      'weight' => 10,
      'region' => 'footer',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'new',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),

  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();
}

/**
 * Configure all user related configuration settings
 */
function julio_user_config() {
  // Enable user picture support and set the default to a square thumbnail option.
  variable_set('user_pictures', '1');
  variable_set('user_picture_dimensions', '1024x1024');
  variable_set('user_picture_file_size', '800');
  variable_set('user_picture_style', 'thumbnail');

  // Allow visitor account creation, but with administrative approval.
  variable_set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);

  // Enable default permissions for system roles.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'use text format filtered_html'));

}

/**
 * Configure a basic image media field for use in content types
 */
function julio_media_field_config() {
  // Create an image field named "Image", enabled for the 'article' content type.
  // Many of the following values will be defaulted, they're included here as an illustrative examples.
  // See http://api.drupal.org/api/function/field_create_field/7

  $field = array(
    'field_name' => 'field_image',
    'type' => 'image',
    'cardinality' => 1,
    'locked' => FALSE,
    'indexes' => array('fid' => array('fid')),
    'settings' => array(
      'uri_scheme' => 'public',
      'default_image' => FALSE,
    ),
    'storage' => array(
      'type' => 'field_sql_storage',
      'settings' => array(),
    ),
  );
  field_create_field($field);

}

/**
 * Configure a page content type along with permissions and and configuration
 */
function julio_page_content_type() {
  $page = array(
    'type' => 'page',
    'name' => st('Basic page'),
    'base' => 'node_content',
    'description' => st("Use <em>basic pages</em> for your static content, such as an 'About us' page."),
    'custom' => 1,
    'modified' => 1,
    'locked' => 0,
  );
  $type = node_type_set_defaults($page);
  node_type_save($type);
  node_add_body_field($type);

  $rdf_mapping = array(
    'type' => 'node',
    'bundle' => 'page',
    'mapping' => array(
      'rdftype' => array('foaf:Document'),
    ),
  );
  rdf_mapping_save($rdf_mapping);

  // Default "Basic page" to not be promoted and have comments disabled.
  variable_set('node_options_page', array('status'));
  variable_set('comment_page', COMMENT_NODE_HIDDEN);

  // Don't display date and author information for "Basic page" nodes by default.
  variable_set('node_submitted_page', FALSE);

  // Many of the following values will be defaulted, they're included here as an illustrative examples.
  // See http://api.drupal.org/api/function/field_create_instance/7
  $instance = array(
    'field_name' => 'field_image',
    'entity_type' => 'node',
    'label' => 'Image',
    'bundle' => 'page',
    'description' => st('Upload an image to go with this page.'),
    'required' => FALSE,

    'settings' => array(
      'file_directory' => 'field/image',
      'file_extensions' => 'png gif jpg jpeg',
      'max_filesize' => '',
      'max_resolution' => '',
      'min_resolution' => '',
      'alt_field' => TRUE,
      'title_field' => '',
    ),

    'widget' => array(
      'type' => 'image_image',
      'settings' => array(
        'progress_indicator' => 'throbber',
        'preview_image_style' => 'thumbnail',
      ),
      'weight' => -1,
    ),

    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array('image_style' => 'large', 'image_link' => ''),
        'weight' => -1,
      ),
      'teaser' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array('image_style' => 'medium', 'image_link' => 'content'),
        'weight' => -1,
      ),
    ),
  );
  field_create_instance($instance);
}

/**
 * Adjust and theme settings
 */
function julio_config_theme() {
  // Enable the admin theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'seven')
    ->execute();
  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');
}

/**
 * Add any navigational elements to the appropriate areas
 */
function julio_nav_config() {
  // Create a Home link in the main menu.
  $item = array(
    'link_title' => st('Home'),
    'link_path' => '<front>',
    'menu_name' => 'main-menu',
    'weight' => -10,
  );
  menu_link_save($item);

  // Update the menu router information.
  menu_rebuild();
}


/**
 * Configure wysiwyg
 */
function julio_wysiwyg() {
  $filtered_settings = array(
    'default' => 1,
    'user_choose' => 0,
    'show_toggle' => 1,
    'theme' => 'advanced',
    'language' => 'en',
    'buttons' => array(
      'default' => array(
        'Bold' => 1,
        'Italic' => 1,
        'Underline' => 1,
        'Strike' => 1,
        'BulletedList' => 1,
        'NumberedList' => 1,
        'Undo' => 1,
        'Redo' => 1,
        'Link' => 1,
        'Image' => 1,
        'Blockquote' => 1,
        'PasteText' => 1,
        'Format' => 1,
      ),
      'drupal' => array(
        'media' => 1,
      ),
    ),
    'toolbar_loc' => 'top',
    'toolbar_align' => 'left',
    'path_loc' => 'bottom',
    'resizing' => 1,
    'verify_html' => 1,
    'preformatted' => 0,
    'convert_fonts_to_spans' => 1,
    'remove_linebreaks' => 1,
    'apply_source_formatting' => 0,
    'paste_auto_cleanup_on_paste' => 0,
    'block_formats' => 'p,address,pre,h2,h3,h4,h5,h6,div',
    'css_setting' => 'theme',
    'css_path' => '0',
    'css_classes' => '0',
  );

  $config = array(
    'filtered_html' => array(
      'format' => 'filtered_html',
      'editor' => 'ckeditor',
      'settings' => $filtered_settings,
    ),
    'plain_text' => array(
      'format' => 'plain_text',
      'editor' => '',
      'settings' => '',
    ),
  );

  foreach ($config as $record) {
    db_merge('wysiwyg')
      ->key(array('format' => $record['format']))
      ->fields(array(
        'editor' => $record['editor'],
        'settings' => serialize($record['settings']),
      ))
      ->execute();
  }
  wysiwyg_profile_cache_clear();
}


